# File: docker-compose.yml

version: '3.8'

services:
  postgres_db:
    image: postgis/postgis:15-3.3
    container_name: seattle_info_postgres_prod
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - seattle_info_net_prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: ${IMAGE_NAME}:latest
    restart: always
    container_name: seattle_info_app_prod
    ports:
      - "80:${SERVER_PORT:-8080}"
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - /home/ubuntu/seatle_info/config/firebase-key.json:/app/secret/firebase-key.json:ro
      - ./.env:/app/.env:ro
      - ./images:/app/images

    networks:
      - seattle_info_net_prod

  migrate:
    image: ${IMAGE_NAME}:latest
    env_file:
      - .env
    volumes:
      - /home/ubuntu/seatle_info/config/firebase-key.json:/app/secret/firebase-key.json:ro
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - seattle_info_net_prod
    # This is the critical line that was missing from your server's file
    command: ["migrate", "up"]

volumes:
  postgres_data_prod:

networks:
  seattle_info_net_prod:
    driver: bridge