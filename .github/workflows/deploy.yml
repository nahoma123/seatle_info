# .github/workflows/deploy.yml

name: Build and Deploy to EC2 via GHCR

on:
  push:
    branches:
      - main

env:
  # This global variable is available to all jobs.
  IMAGE_NAME: ghcr.io/nahoma123/seatle_info

jobs:
  build-and-push-image:
    name: Build Docker image and push to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-ec2:
    name: Deploy to EC2 instance
    runs-on: ubuntu-latest
    needs: build-and-push-image
    environment: SERVER_HOST

    # These environment variables will be available to all steps in this job
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      FIREBASE_ADMIN_SDK_JSON: ${{ secrets.FIREBASE_ADMIN_SDK_JSON }}
      FIREBASE_KEY_PATH_ON_SERVER: ${{ secrets.FIREBASE_KEY_PATH_ON_SERVER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add server to known_hosts for security
        run: |
          ssh-keyscan -H "${SERVER_HOST}" >> ~/.ssh/known_hosts

      - name: Copy supporting files to server
        run: |
          scp -i ~/.ssh/id_rsa ./docker-compose.yml ${SERVER_USER}@${SERVER_HOST}:~/seatle_info/docker-compose.yml

          echo "${FIREBASE_ADMIN_SDK_JSON}" > ./firebase-key-to-copy.json
          scp -i ~/.ssh/id_rsa ./firebase-key-to-copy.json ${SERVER_USER}@${SERVER_HOST}:${FIREBASE_KEY_PATH_ON_SERVER}
          rm ./firebase-key-to-copy.json

      - name: SSH, Create Env, Deploy, and Migrate
        # THE FIX IS THIS PIPE CHARACTER -> |
        run: |
          ssh -i ~/.ssh/id_rsa ${SERVER_USER}@${SERVER_HOST} "bash -s" << 'EOF'
            set -e
            cd ~/seatle_info

            echo "Ensuring config directory exists..."
            mkdir -p ./config

            echo "Placing Firebase key in the correct location..."
            echo "${FIREBASE_ADMIN_SDK_JSON}" > ./config/firebase-key.json

            echo "Creating production .env file..."
            cat > ./.env << EOL
# --- Production Environment Variables ---
DB_USER=${{ secrets.DB_USER }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
DB_NAME=${{ secrets.DB_NAME }}
DB_HOST=postgres_db
DB_SSL_MODE=disable

GIN_MODE=release
SERVER_PORT=8080

FIREBASE_SERVICE_ACCOUNT_KEY_PATH=/app/secret/firebase-key.json

IMAGE_NAME=${{ env.IMAGE_NAME }}
EOL

            echo "Verifying .env file contents..."
            cat ./.env

            echo "Logging into GHCR..."
            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            echo "Pulling latest images from GHCR..."
            sudo docker compose pull

            echo "Bringing up services with new images and configuration..."
            sudo docker compose up -d --force-recreate

            echo "Pruning old Docker images to save space..."
            sudo docker image prune -af
          EOF
