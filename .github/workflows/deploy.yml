# .github/workflows/deploy.yml

name: Build and Deploy to EC2 via GHCR

on:
  push:
    branches:
      - main

# THE FIX: Define IMAGE_NAME here at the top level to make it global.
# All jobs in this workflow can now access it using ${{ env.IMAGE_NAME }}.
env:
  IMAGE_NAME: ghcr.io/nahoma123/seatle_info

jobs:
  build-and-push-image:
    name: Build Docker image and push to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # It automatically uses the global IMAGE_NAME variable
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-ec2:
    name: Deploy to EC2 instance
    runs-on: ubuntu-latest
    needs: build-and-push-image
    environment: SERVER_HOST

    # FIXED: Hardcoded IMAGE_NAME instead of referencing env inside env block.
    env:
      PROD_DB_USER: ${{ secrets.DB_USER }}
      PROD_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      PROD_DB_NAME: ${{ secrets.DB_NAME }}
      PROD_FIREBASE_JSON: ${{ secrets.FIREBASE_ADMIN_SDK_JSON }}
      GITHUB_LOGIN_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
      IMAGE_NAME: ghcr.io/nahoma123/seatle_info

    steps:
      - name: SSH, Create Env, Deploy, and Migrate
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts

          ssh -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_HOST "bash -s" << 'EOF'
            set -e
            cd ~/seatle_info
            mkdir -p ./config
            echo "$PROD_FIREBASE_JSON" > ./config/firebase-key.json
            > ./.env
            echo "DB_USER=$PROD_DB_USER" >> ./.env
            echo "DB_PASSWORD=$PROD_DB_PASSWORD" >> ./.env
            echo "DB_NAME=$PROD_DB_NAME" >> ./.env
            echo "DB_HOST=postgres_db" >> ./.env
            echo "DB_SSL_MODE=disable" >> ./.env
            echo "GIN_MODE=release" >> ./.env
            echo "SERVER_PORT=8080" >> ./.env
            echo "FIREBASE_SERVICE_ACCOUNT_KEY_PATH=/app/secret/firebase-key.json" >> ./.env
            echo "IMAGE_NAME=$IMAGE_NAME" >> ./.env
            cat ./.env
            echo "$GITHUB_LOGIN_TOKEN" | sudo docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            sudo docker compose pull
            sudo docker compose up -d --force-recreate
            sudo docker image prune -af
          EOF
