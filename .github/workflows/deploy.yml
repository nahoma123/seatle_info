name: Build and Deploy to EC2 via GHCR

on:
  push:
    branches:
      - main

# Global variable for the image name
env:
  IMAGE_NAME: ghcr.io/nahoma123/seatle_info

jobs:
  build-and-push-image:
    # ... (This job remains unchanged and is correct)
    name: Build Docker image and push to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-ec2:
    name: Deploy to EC2 instance
    runs-on: ubuntu-latest
    needs: build-and-push-image
    # This line is critical: it tells GitHub to use the SERVER_HOST environment and its secrets
    environment: SERVER_HOST

    # The 'env' block makes the secrets available as shell variables
    env:
      PROD_DB_USER: ${{ secrets.DB_USER }}
      PROD_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      PROD_DB_NAME: ${{ secrets.DB_NAME }}
      PROD_FIREBASE_JSON: ${{ secrets.FIREBASE_ADMIN_SDK_JSON }}
      GITHUB_LOGIN_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
      IMAGE_NAME: ghcr.io/nahoma123/seatle_info

    steps:
      - name: Deploy to Server via SSH
        run: |
          # We create a local script file on the runner...
          cat << SCRIPT_TO_RUN_ON_SERVER > ./remote_script.sh
          # ...the 'set -e' command ensures the script will exit immediately if a command fails
          set -e
          
          # All commands below will be written into the script file
          cd ~/seatle_info
          mkdir -p ./config
          echo '${PROD_FIREBASE_JSON}' > ./config/firebase-key.json

          echo "Creating production .env file..."
          > ./.env
          echo "DB_USER=${PROD_DB_USER}" >> ./.env
          echo "DB_PASSWORD=${PROD_DB_PASSWORD}" >> ./.env
          echo "DB_NAME=${PROD_DB_NAME}" >> ./.env
          echo "DB_HOST=postgres_db" >> ./.env
          echo "DB_SSL_MODE=disable" >> ./.### What This Accomplishes
